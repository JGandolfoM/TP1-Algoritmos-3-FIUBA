TestCase subclass: #TeleAlgoTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:39'!test27SeIngresaUnaLlamadaInternacionalEnUnHorarioInvalidoYSaltaElSignal	| teleAlgo duracion horario destino abono tarifa|		"Arrange"	duracion := 10.	destino := 'Japón'.	abono:= 100.	horario := -26.	tarifa := 3.	teleAlgo := TeleAlgo conAbonoMensual: abono.	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.	"Act and Assert"	self should: [teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia: destino]raise: HorarioInvalidoError.			! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test5SeRegistraUnaLlamadaInternacionalYOtraNacionalEnHorarioHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	abonoMensual := 100.	montoEsperadoAPagar := abonoMensual + 20 + 2.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 2.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Paraguay'.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:37'!test22NoHagoNingunaLlamadaYElGastoFinalEsElAbonoMensual	| teleAlgo  abonoMensual|		"Arrange"	abonoMensual := 220.		teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		"Act and Assert"	self assert: teleAlgo calcularGastoFinal equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:52'!test11SeRegistraUnaLlamadaNacionalEnHorarioHabilConDuracion0YElGastoFinalEsSoloEllAbonoMensual	| teleAlgo abonoMensual duracion horario|	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	duracion := 0.	horario := 9.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: duracion HechaEnElHorario: horario.		self		assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test6SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| teleAlgo abonoMensual llamadas|		"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	teleAlgo registrarLlamadaInternacionalCon: 20 HechaEnElHorario: 24 Hacia: 'Paraguay'.	llamadas := teleAlgo llamadas.	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'La llamada mas costosa: La llamada se hizo a Paraguay a las 24 hs durando 20 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:36'!test20LlamadaNacionalRespondeBienAlMensajeDescribir	| llamada  duracion horario |		"Arange"	duracion := 30.	horario := 20.		llamada := Llamada nacionalEnElHorario: horario ConDuracion: duracion.		"Act and Assert"	self assert: (llamada describir) equals: ('Fue una llamada Nacional que se realizó a las ', horario asString, ' hs durando ', duracion asString, ' minutos').! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:46'!test2SeRegistraUnaLlamadaNacionalEnHoraHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 102. "El abono mas el costo de todas las llamadas"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	"El horario es un numero natural que va desde la hora 1 a la hora 24"	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario habil es de 0,2 $"	"El horario habil es de 8 a 20"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/24/2022 21:10'!test16SeCreaUnTeleAlgoSinRegistrarNingunaLlamadaYAlConsultarPorLaMasCostosaNoDescribeNinguna	| teleAlgo abonoMensual|	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		self assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa ) equals: ('No se realizó ninguna llamada').! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test3SeRegistraUnaLlamadaNacionallYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 101.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario no habil es de 0,1 $"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:52'!test10SeRegistraDosLlamadasInternacionalesUnaEnHorioHabilYOtraEnHorarioNoHabilYValenLoMismo	| teleAlgo1 teleAlgo2 abonoMensual unaTarifa duracion horario1 horario2 pais |	"Arrange"	abonoMensual := 100.	unaTarifa := 5.	duracion := 30.	horario1 := 20.	horario2 := 8.	pais := 'México'.	teleAlgo1 := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo2 := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo1 aplicarTarifaPorMinutoALlamadaInternacional: unaTarifa.	teleAlgo1 registrarLlamadaInternacionalCon:duracion HechaEnElHorario: horario1 Hacia: pais.	teleAlgo2 aplicarTarifaPorMinutoALlamadaInternacional: unaTarifa.	teleAlgo2 registrarLlamadaInternacionalCon:duracion HechaEnElHorario: horario2 Hacia: pais.	self assert: ( teleAlgo1 calcularGastoFinal ) equals: ( teleAlgo2 calcularGastoFinal ).! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test1SeFacturanLasLlamadasDeUnUsuarioQueNoRealizoLlamadasDuranteElMesYPagaSoloElAbonoMensualFijo	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 100.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 17:23'!test19SeCreaUnTeleAlgoConUnaLlamadaInternacionalConTarifaNegativaYNElGastoFinalEsSoloElAbonoMensual	| teleAlgo abonoMensual tarifa duracion pais horario |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	tarifa := -10.	duracion := 0.	pais := 'España'.	horario := 23.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.		teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia: pais.		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:37'!test21LlamadaInternacionalRespondeBienAlMensajeDescribir	| llamada  duracion horario pais tarifa|		"Arrange"	duracion := 30.	horario := 20.	pais := 'España'.	tarifa := 2.		llamada := Llamada internacionalEnElHorario: horario ConDuracion: duracion ConTarifa: tarifa Hacia: pais.	"Act and Assert"	self assert: (llamada describir) equals: ('La llamada se hizo a ', pais, ' a las ', horario asString, ' hs durando ', duracion asString, ' minutos').! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/24/2022 21:13'!test18SeCreaUnTeleAlgoSinParametroCorrectamenteYLaTarifaInternacionalEsCero	| teleAlgo |	"Arrange"	teleAlgo := TeleAlgo new.		self assert: ( teleAlgo tarifaInternacional ) equals: 0.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:38'!test23SeAgregaUnaLlamadaAllamadasCorrectamente	| teleAlgo llamada  duracion horario abonoMensual|		"Arrange"	duracion := 30.	horario := 20.	abonoMensual := 220.		teleAlgo := TeleAlgo conAbonoMensual: 220.		llamada := Llamada nacionalEnElHorario: horario ConDuracion: duracion.		self deny: teleAlgo llamadas isNotEmpty.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:38'!test25SeIngresaUnaLlamadaNacionalEnUnHorarioInvalidoYSaltaElSignal	| teleAlgo duracion horario abono tarifa|	"Arrange"	duracion := 10.	abono:= 100.	horario := -26.	tarifa := 3.	teleAlgo := TeleAlgo conAbonoMensual: abono.	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.	"Act and Assert"	self should: [teleAlgo registrarLlamadaNacionalConDuracion: duracion HechaEnElHorario: horario]raise: HorarioInvalidoError.			! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:55'!test13SeRegistraUnaLlamadaInternacionalEnHorarioHabilConDuracion0YElGastoFinalEsSoloEllAbonoMensual	| teleAlgo abonoMensual tarifa duracion pais horario |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	tarifa := 2.	duracion := 0.	pais := 'España'.	horario := 8.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.	teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia: pais.		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/24/2022 21:12'!test17SeCreaUnTeleAlgoSinParametroCorrectamenteYelAbonoMensualEsCero	| teleAlgo |	"Arrange"	teleAlgo := TeleAlgo new.		self assert: ( teleAlgo abonoMensual ) equals: 0.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:56'!test14SeRegistraUnaLlamadaInternacionalEnHorarioNoHabilConDuracion0YElGastoFinalEsSoloEllAbonoMensual	| teleAlgo abonoMensual tarifa duracion pais horario |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	tarifa := 2.	duracion := 0.	pais := 'España'.	horario := 23.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.	teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia: pais.		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test8SeRegistraUnaLlamadaInternacionalQueAlDurarExactamente30MinutosSeLeAplicaUnDescuentoDel10PorCiento	| teleAlgo abonoMensual montoEsperadoAPagar unaTarifa duracion horario pais |		"Arrange"	abonoMensual := 100.	unaTarifa := 5.	duracion := 30.	montoEsperadoAPagar := 235.	horario := 20.	pais := 'México'.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: unaTarifa.	teleAlgo registrarLlamadaInternacionalCon:duracion HechaEnElHorario: horario Hacia: pais.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:57'!test15SeRegistraUnaLlamadaInternacionalSinAplicarUnaTarifaYEstaPorDefectoEsNula| teleAlgo abonoMensual duracion pais horario |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	duracion := 35.	pais := 'España'.	horario := 8.	"Act and Assert"	teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia: pais.		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/25/2022 15:48'!test9SeRegistraUnaLlamadaNacionalEnHoraNoHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual duracion horario|		"Arrange"	abonoMensual := 100.	duracion :=  10.	horario := 20.	montoEsperadoAPagar := (duracion * 0.1) + abonoMensual . 	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		teleAlgo registrarLlamadaNacionalConDuracion: duracion HechaEnElHorario: horario.		"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:39'!test26SeRegistranVariasLlamadasYSeConsultaPorLaMasCostosa	| teleAlgo duracion1 duracion2 duracion3 horario abono esperado|		"Arrange"	duracion1 := 10.	duracion2 := 323.	duracion3 := 60.	abono:= 100.	horario := 20.	esperado := 'La llamada mas costosa: Fue una llamada Nacional que se realizó a las ', horario asString, ' hs durando ', duracion2 asString, ' minutos'.	teleAlgo := TeleAlgo conAbonoMensual: abono.		"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: duracion1 HechaEnElHorario: horario.	teleAlgo registrarLlamadaNacionalConDuracion: duracion2 HechaEnElHorario: horario.	teleAlgo registrarLlamadaNacionalConDuracion: duracion3 HechaEnElHorario: horario.			self assert: (teleAlgo consultarPorLlamadaEfectuadaMasCostosa) equals: esperado.	! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 13:53'!test12SeRegistraUnaLlamadaNacionalEnHorarioHabilConDuracion0YElGastoFinalEsSoloEllAbonoMensual	| teleAlgo abonoMensual duracion horario|	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	duracion := 0.	horario := 21.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: duracion HechaEnElHorario: horario.		self		assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test4SeRegistraUnaLlamadaInternacionalYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 110.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Uruguay'.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'Joaquito 5/26/2022 15:38'!test24SeAplicaUnaTarifaDeLlamadaInternacionalConValorNegativoYSeUsaComoValorDeTarifaCero	|duracion horario pais tarifa abonoMensual teleAlgo|		"Arrange"	duracion := 29.	horario := 20.	pais := 'España'.	tarifa := -2.	abonoMensual := 220. 	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: tarifa.		teleAlgo registrarLlamadaInternacionalCon: duracion HechaEnElHorario: horario Hacia:pais.			"Act and Assert"	self assert: teleAlgo calcularGastoFinal equals: abonoMensual.  ! !!TeleAlgoTest methodsFor: 'tests' stamp: 'JoaquitoCAI 4/25/2022 21:47'!test7SeRegistraUnaLlamadaQueAlDurarMasDe30MinutosSeLeAplicaUnDescuentoDel10PorCiento	| teleAlgo abonoMensual montoEsperadoAPagar |		"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	montoEsperadoAPagar := 103.6.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 40 HechaEnElHorario: 24.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TeleAlgoTest class	instanceVariableNames: ''!!TeleAlgoTest class methodsFor: 'history' stamp: 'JoaquitoCAI 4/24/2022 13:19'!lastStoredRun	^ ((Dictionary new) add: (#timeStamp->(DateAndTime basicNew instVarAt: 1 put: 58580; instVarAt: 2 put: (Duration seconds: -10800 nanoSeconds: 0); instVarAt: 3 put: 2459694; instVarAt: 4 put: 611220000; yourself)); add: (#passed->((Set new))); add: (#failures->((Set new))); add: (#errors->((Set new) add: #test1SeFacturanLasLlamadasDeUnUsuarioQueNoRealizoLlamadasDuranteElMesYPagaSoloElAbonoMensualFijo; add: #test4SeRegistraUnaLlamadaInternacionalYSeFactura; add: #test3SeRegistraUnaLlamadaNacionallYSeFactura; add: #test5SeRegistraUnaLlamadaInternacionalYOtraNacionalEnHorarioHabilYSeFactura; add: #test6SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma; add: #test7SeRegistraUnaLlamadaQueAlDurarMasDe30MinutosSeLeAplicaUnDescuentoDel10PorCiento; add: #test2SeRegistraUnaLlamadaNacionalEnHoraHabilYSeFactura; yourself)); yourself)! !